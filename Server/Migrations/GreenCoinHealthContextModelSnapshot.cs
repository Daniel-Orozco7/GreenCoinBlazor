// <auto-generated />
using GreenCoinHealth.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenCoinHealth.Server.Migrations
{
    [DbContext(typeof(GreenCoinHealthContext))]
    partial class GreenCoinHealthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Alimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsOrganico")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Dieta", b =>
                {
                    b.Property<int>("DietaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DietaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DietaId");

                    b.ToTable("Dietas");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.DietaAlimento", b =>
                {
                    b.Property<int>("DietaId")
                        .HasColumnType("int");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("int");

                    b.HasKey("DietaId", "AlimentoId");

                    b.HasIndex("AlimentoId");

                    b.ToTable("DietaAlimentos");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Dificultad", b =>
                {
                    b.Property<int>("DificultadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DificultadId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DificultadId");

                    b.ToTable("Dificultades");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Ejercicio", b =>
                {
                    b.Property<int>("EjercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EjercicioId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DificultadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Repeticiones")
                        .HasColumnType("int");

                    b.Property<int>("RutinaId")
                        .HasColumnType("int");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.HasKey("EjercicioId");

                    b.HasIndex("DificultadId");

                    b.HasIndex("RutinaId");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Gender", b =>
                {
                    b.Property<string>("IdGender")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id_Gender");

                    b.Property<string>("NameGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name_Gender");

                    b.HasKey("IdGender");

                    b.ToTable("Gender", (string)null);
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Role", b =>
                {
                    b.Property<string>("IdRole")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id_Role");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRole");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Rutina", b =>
                {
                    b.Property<int>("RutinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RutinaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RutinaId");

                    b.ToTable("Rutinas");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.User", b =>
                {
                    b.Property<string>("Dni")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id_Gender");

                    b.Property<string>("IdRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id_Role");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("TypeDni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("username");

                    b.HasKey("Dni");

                    b.HasIndex(new[] { "IdGender" }, "IX_User_Id_Gender");

                    b.HasIndex(new[] { "IdRole" }, "IX_User_Id_Role");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.DietaAlimento", b =>
                {
                    b.HasOne("GreenCoinHealth.Server.Models.Alimentos", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenCoinHealth.Server.Models.Dieta", "Dieta")
                        .WithMany("DietaAlimentos")
                        .HasForeignKey("DietaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Dieta");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Ejercicio", b =>
                {
                    b.HasOne("GreenCoinHealth.Server.Models.Dificultad", "Dificultad")
                        .WithMany()
                        .HasForeignKey("DificultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenCoinHealth.Server.Models.Rutina", "Rutina")
                        .WithMany("Ejercicios")
                        .HasForeignKey("RutinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dificultad");

                    b.Navigation("Rutina");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.User", b =>
                {
                    b.HasOne("GreenCoinHealth.Server.Models.Gender", "IdGenderNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdGender")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenCoinHealth.Server.Models.Role", "IdRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdGenderNavigation");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Dieta", b =>
                {
                    b.Navigation("DietaAlimentos");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GreenCoinHealth.Server.Models.Rutina", b =>
                {
                    b.Navigation("Ejercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
