@page "/ForgetPassword"
@using System.Net.Http.Json
@using GreenCoinHealth.Shared
@inject HttpClient HttpClient
@inject NavigationManager navigationManager
@implements IDisposable
@inject IJSRuntime JS

<link href="css/register.css" rel="stylesheet">

<div class="registration-container">
    <h1 class="text-title">¿Olvidaste tu contraseña?</h1>
    <div class="form-group">
        <label for="emailInput" class="label">Correo Electrónico:</label>
        <input id="emailInput" class="form-control" @bind="email" />
    </div>

    <button class="btn-primary" @onclick="EnviarCorreo">Enviar</button>
</div>

@code {
    private string email;

    private async Task EnviarCorreo()
    {
        if (string.IsNullOrWhiteSpace(email))
        {
            // Validar si el correo electrónico está vacío
            // Puedes agregar una lógica adicional de validación aquí si es necesario
            return;
        }

        try
        {
            // Crear un objeto MailDTO con la dirección de correo electrónico
            var emailDto = new MailDTO { Email_Addressee = email };

            // Enviar la solicitud POST a la API para enviar el correo de recuperación
            var response = await HttpClient.PostAsJsonAsync("/api/Recovery_Password/Recovery-password", emailDto);

            if (response.IsSuccessStatusCode)
            {
                // Mostrar un mensaje de éxito al usuario
                // Puedes implementar una notificación o redirigir a una página de confirmación
                Console.WriteLine("Correo de recuperación enviado correctamente");
                navigationManager.NavigateTo("/correoEnviado");
            }
            else
            {
                // Manejar errores si la solicitud no fue exitosa
                Console.WriteLine("Error al enviar el correo de recuperación");
            }
        }
        catch (Exception ex)
        {
            // Manejar excepciones si ocurre algún error durante la solicitud
            Console.WriteLine($"Error al enviar el correo de recuperación: {ex.Message}");
        }
    }

    // Implementación de IDisposable para limpiar recursos si es necesario
    public void Dispose()
    {
        HttpClient.Dispose();
    }
}
